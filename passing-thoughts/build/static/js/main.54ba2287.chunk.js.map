{"version":3,"sources":["utilities.js","AddThoughtForm.js","Thought.js","App.js","index.js"],"names":["getNewExpirationTime","Date","now","nextId","generateId","result","AddThoughtForm","props","useState","text","setText","className","onSubmit","event","preventDefault","thoughtObject","id","expiresAt","length","addThought","value","onChange","target","type","aria-label","placeholder","Thought","thought","removeThought","useEffect","timeRemaining","timeout","setTimeout","clearTimeout","onClick","App","thoughts","setThoughts","filter","map","ReactDOM","render","document","getElementById"],"mappings":"kLAAO,SAASA,IACf,OAAOC,KAAKC,MAAQ,KAGnB,IAAIC,EAAS,EACN,SAASC,IACjB,IAAMC,EAASF,EAEf,OADAA,GAAU,EACHE,E,WC4BOC,MAhCf,SAAyBC,GAAQ,IAAD,EACJC,mBAAS,IADL,mBACtBC,EADsB,KAChBC,EADgB,KAgB9B,OACE,uBACEC,UAAU,iBACVC,SAdiB,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAgB,CACpBC,GAAIZ,IACJK,KAAMA,EACNQ,UAAWjB,KAEVe,EAAcN,KAAKS,OAAS,GAC/BX,EAAMY,WAAWJ,IAIjB,UAGE,uBACEK,MAAOX,EACPY,SApBmB,SAACR,GACxBH,EAAQG,EAAMS,OAAOF,QAoBjBG,KAAK,OACLC,aAAW,uBACXC,YAAY,yBAEd,uBAAOF,KAAK,SAASH,MAAM,YC5B1B,SAASM,EAAQnB,GAAQ,IACtBoB,EAA2BpB,EAA3BoB,QAASC,EAAkBrB,EAAlBqB,cAEjBC,qBAAU,WACX,IAAMC,EAAgBH,EAAQV,UAAYhB,KAAKC,MACzC6B,EAAUC,YAAW,WAC1BJ,EAAcD,EAAQX,MACpBc,GACH,OAAO,WACLG,aAAaF,MAEX,CAACH,EAAeD,IAMnB,OACE,qBAAIhB,UAAU,UAAd,UACE,wBACEa,aAAW,iBACXb,UAAU,gBACVuB,QATmB,WACzBN,EAAcD,EAAQX,KAKlB,kBAOA,qBAAKL,UAAU,OAAf,SAAuBgB,EAAQlB,UCvBtB,SAAS0B,IAAO,IAAD,EACI3B,mBAAS,CACvC,CACEQ,GAAIZ,IACJK,KAAM,6CACNQ,UAAWjB,KAEb,CACEgB,GAAIZ,IACJK,KAAM,uCACNQ,UAAWjB,OAVa,mBACrBoC,EADqB,KACXC,EADW,KAgBvBT,EAAgB,SAACZ,GACtBqB,EAAYD,EAASE,QAAQ,SAAAX,GAC5B,OAAOA,EAAQX,KAAOA,OAGvB,OACE,sBAAKL,UAAU,MAAf,UACE,iCACE,oDAEF,iCACE,cAAC,EAAD,CAAgBQ,WAdJ,SAACQ,GACnBU,GAAa,SAAAD,GAAQ,4BAAQA,GAAR,CAAkBT,UAcjC,oBAAIhB,UAAU,WAAd,SACGyB,EAASG,KAAI,SAACZ,GAAD,OACnB,cAACD,EAAD,CAECC,QAASA,EACTC,cAAeA,GAFVD,EAAQX,eAWnBwB,IAASC,OAAO,cAACN,EAAD,IAASO,SAASC,eAAe,QC3CjDH,IAASC,OACP,cAACN,EAAD,IACAO,SAASC,eAAe,U","file":"static/js/main.54ba2287.chunk.js","sourcesContent":["export function getNewExpirationTime() {\n\treturn Date.now() + 15 * 1000;\n  }\n  \n  let nextId = 0;\n  export function generateId() {\n\tconst result = nextId;\n\tnextId += 1;\n\treturn result;\n  }","import { useState } from 'react';\nimport React from 'react';\nimport { generateId, getNewExpirationTime } from './utilities';\n\nfunction AddThoughtForm (props) {\n  const [ text, setText ] = useState(\"\");\n  const handleTextChange = (event) => {\n    setText(event.target.value)\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const thoughtObject = {\n      id: generateId(),\n      text: text,\n      expiresAt: getNewExpirationTime()\n\t}\n\t  if (thoughtObject.text.length > 0) {\n\t\t  props.addThought(thoughtObject);\n\t  }\n  }\n  return (\n    <form\n      className=\"AddThoughtForm\"\n      onSubmit={handleSubmit}>\n      <input\n        value={text}\n        onChange={handleTextChange}\n        type=\"text\"\n        aria-label=\"What's on your mind?\"\n        placeholder=\"What's on your mind?\"\n      />\n      <input type=\"submit\" value=\"Add\" />\n    </form>\n  );\n};\n\nexport default AddThoughtForm;\n","import React from 'react';\nimport  { useEffect } from 'react';\n\nexport function Thought(props) {\n  const { thought, removeThought } = props;\n\n  useEffect(() => {\n\tconst timeRemaining = thought.expiresAt - Date.now();\n\tconst timeout = setTimeout(() => {\n\t\tremoveThought(thought.id);\n\t}, timeRemaining);\n\treturn () => {\n\t  clearTimeout(timeout);\n\t};\n  }, [removeThought, thought]);\n\n\tconst handleRemoveClick = () => {\n \tremoveThought(thought.id);\n  };\n\n  return (\n    <li className=\"Thought\">\n      <button\n        aria-label=\"Remove thought\"\n        className=\"remove-button\"\n        onClick={handleRemoveClick}\n      >\n        &times;\n      </button>\n      <div className=\"text\">{thought.text}</div>\n    </li>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport AddThoughtForm  from './AddThoughtForm';\nimport { Thought } from './Thought';\nimport { generateId, getNewExpirationTime } from './utilities';\n\nexport default function App() {\n  const [thoughts, setThoughts] = useState([\n    {\n      id: generateId(),\n      text: 'This is a place for your passing thoughts.',\n      expiresAt: getNewExpirationTime(),\n    },\n    {\n      id: generateId(),\n      text: \"They'll be removed after 15 seconds.\",\n      expiresAt: getNewExpirationTime(),\n    },\n  ]);\n\tconst addThought = (thought) => {\n\t\tsetThoughts((thoughts => [...thoughts, thought]));\n\t};\n\tconst removeThought = (id) => {\n\t\tsetThoughts(thoughts.filter((thought => {\n\t\t\treturn thought.id !== id\n\t\t})));\n\t}\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Passing Thoughts</h1>\n      </header>\n      <main>\n        <AddThoughtForm addThought={addThought}/>\n        <ul className=\"thoughts\">\n          {thoughts.map((thought) => (\n\t\t\t  <Thought\n\t\t\t\t  key={thought.id}\n\t\t\t\t  thought={thought}\n\t\t\t\t  removeThought={removeThought}\n\t\t\t  />\n          ))}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('app'));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}